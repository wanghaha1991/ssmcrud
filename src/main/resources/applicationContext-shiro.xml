<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--security manager-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="loginRealm"/>
        <!--<property name="cacheManager" ref="ehCacheManager"/>-->
        <property name="rememberMeManager.cookie.maxAge" value="300"/>
        <property name="sessionManager" ref="defaultWebSessionManager" />
        <property name="cacheManager" ref="shiroSpringCacheManager"/>
    </bean>

    <!-- 配置自定义缓存管理器，中引入redis缓存管理器 -->
    <bean id = "shiroSpringCacheManager" class="cn.kgc.share.cache.ShiroSpringCacheManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>
    <bean id="defaultWebSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session存储的实现 -->
        <property name="sessionDAO" ref="shiroRedisSessionDAO" />
        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
        <property name="sessionIdCookie" ref="shareSession" />
        <!-- 设置全局会话超时时间，默认30分钟(1800000) -->
        <property name="globalSessionTimeout" value="1800000" />
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
        <property name="deleteInvalidSessions" value="true" />
        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1800000" />
        <!-- 定时检查失效的session -->
        <property name="sessionValidationSchedulerEnabled" value="true" />
    </bean>

    <!-- session会话存储的实现类 -->
    <bean id="shiroRedisSessionDAO" class="cn.kgc.share.session.RedisSessionDao">
        <property name="redisManager" ref="redisManager"/>
    </bean>
    <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
    <bean id="shareSession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- cookie的name,对应的默认是 JSESSIONID -->
        <constructor-arg name="name" value="SHAREJSESSIONID" />
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
        <property name="path" value="/" />
        <property name="httpOnly" value="true"/>
    </bean>
    <!--realm方法-->
    <bean class="cn.kgc.realm.LoginRealm" id="loginRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"/>
                <property name="hashIterations" value="1024"/>
            </bean>
        </property>
    </bean>
    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!--shiroFilter 的规则-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="loginUrl" value="/"/>
        <property name="successUrl" value="/main"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <property name="filterChainDefinitions">
            <value>
                / = anon
                /login = anon
                /img/** = anon
                /css/** =anon
                /js/** =anon
                /fonts/**=anon
                /logout = logout
                /** = user
            </value>
        </property>
    </bean>
</beans>